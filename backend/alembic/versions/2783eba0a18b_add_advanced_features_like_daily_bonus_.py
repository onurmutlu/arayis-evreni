"""Add advanced features like daily bonus, streak, vip, leaderboard

Revision ID: 2783eba0a18b
Revises: 
Create Date: 2025-04-09 12:30:18.613042

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2783eba0a18b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('nfts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('video_url', sa.String(), nullable=True),
    sa.Column('category', sa.Enum('GENERAL', 'SORA_VIDEO', 'VOTE_BASIC', 'VOTE_PREMIUM', 'VOTE_SORA', name='nftcategory'), nullable=False),
    sa.Column('price_stars', sa.Integer(), nullable=False),
    sa.Column('total_supply', sa.Integer(), nullable=True),
    sa.Column('mintable', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nfts_id'), 'nfts', ['id'], unique=False)
    op.create_index(op.f('ix_nfts_name'), 'nfts', ['name'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('telegram_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('xp', sa.Integer(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('stars', sa.Integer(), nullable=True),
    sa.Column('stars_enabled', sa.Boolean(), nullable=True),
    sa.Column('has_vip_access', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('consecutive_login_days', sa.Integer(), nullable=True),
    sa.Column('mission_streak', sa.Integer(), nullable=True),
    sa.Column('inviter_id', sa.Integer(), nullable=True),
    sa.Column('invited_users_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['inviter_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_telegram_id'), 'users', ['telegram_id'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('daily_bonus_claims',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('claim_date', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('day_streak', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_daily_bonus_claims_id'), 'daily_bonus_claims', ['id'], unique=False)
    op.create_index(op.f('ix_daily_bonus_claims_user_id'), 'daily_bonus_claims', ['user_id'], unique=False)
    op.create_table('dao_proposals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'CLOSED', 'PASSED', 'REJECTED', name='proposalstatus'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dao_proposals_id'), 'dao_proposals', ['id'], unique=False)
    op.create_index(op.f('ix_dao_proposals_title'), 'dao_proposals', ['title'], unique=False)
    op.create_table('leaderboard_cache',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('rank', sa.Integer(), nullable=False),
    sa.Column('last_updated', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_leaderboard_cache_category'), 'leaderboard_cache', ['category'], unique=False)
    op.create_index(op.f('ix_leaderboard_cache_id'), 'leaderboard_cache', ['id'], unique=False)
    op.create_index(op.f('ix_leaderboard_cache_rank'), 'leaderboard_cache', ['rank'], unique=False)
    op.create_index(op.f('ix_leaderboard_cache_user_id'), 'leaderboard_cache', ['user_id'], unique=False)
    op.create_index(op.f('ix_leaderboard_cache_value'), 'leaderboard_cache', ['value'], unique=False)
    op.create_table('missions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('xp_reward', sa.Integer(), nullable=False),
    sa.Column('mission_type', sa.Enum('FLIRT', 'ANALYSIS', 'MESSAGE', 'INVITE', 'OTHER', name='missiontype'), nullable=True),
    sa.Column('cooldown_hours', sa.Integer(), nullable=True),
    sa.Column('required_level', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('is_vip', sa.Boolean(), nullable=True),
    sa.Column('required_nft_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['required_nft_id'], ['nfts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_missions_id'), 'missions', ['id'], unique=False)
    op.create_index(op.f('ix_missions_title'), 'missions', ['title'], unique=False)
    op.create_table('user_nfts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('nft_id', sa.Integer(), nullable=False),
    sa.Column('purchase_date', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('purchase_price_stars', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['nft_id'], ['nfts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_nfts_id'), 'user_nfts', ['id'], unique=False)
    op.create_table('badges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('image_url', sa.String(), nullable=False),
    sa.Column('required_xp', sa.Integer(), nullable=True),
    sa.Column('required_mission_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['required_mission_id'], ['missions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_badges_id'), 'badges', ['id'], unique=False)
    op.create_index(op.f('ix_badges_name'), 'badges', ['name'], unique=True)
    op.create_table('dao_votes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('proposal_id', sa.Integer(), nullable=False),
    sa.Column('vote_power', sa.Integer(), nullable=False),
    sa.Column('choice', sa.Boolean(), nullable=False),
    sa.Column('voted_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['proposal_id'], ['dao_proposals.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dao_votes_id'), 'dao_votes', ['id'], unique=False)
    op.create_table('mission_story_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('mission_id', sa.Integer(), nullable=False),
    sa.Column('story_text', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['mission_id'], ['missions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mission_story_logs_id'), 'mission_story_logs', ['id'], unique=False)
    op.create_index(op.f('ix_mission_story_logs_user_id'), 'mission_story_logs', ['user_id'], unique=False)
    op.create_table('user_mission_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('mission_id', sa.Integer(), nullable=False),
    sa.Column('completion_time', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['mission_id'], ['missions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_mission_logs_id'), 'user_mission_logs', ['id'], unique=False)
    op.create_index(op.f('ix_user_mission_logs_user_id'), 'user_mission_logs', ['user_id'], unique=False)
    op.create_table('user_missions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('mission_id', sa.Integer(), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['mission_id'], ['missions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_missions_id'), 'user_missions', ['id'], unique=False)
    op.create_table('user_badges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('badge_id', sa.Integer(), nullable=False),
    sa.Column('earned_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['badge_id'], ['badges.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_badges_id'), 'user_badges', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_badges_id'), table_name='user_badges')
    op.drop_table('user_badges')
    op.drop_index(op.f('ix_user_missions_id'), table_name='user_missions')
    op.drop_table('user_missions')
    op.drop_index(op.f('ix_user_mission_logs_user_id'), table_name='user_mission_logs')
    op.drop_index(op.f('ix_user_mission_logs_id'), table_name='user_mission_logs')
    op.drop_table('user_mission_logs')
    op.drop_index(op.f('ix_mission_story_logs_user_id'), table_name='mission_story_logs')
    op.drop_index(op.f('ix_mission_story_logs_id'), table_name='mission_story_logs')
    op.drop_table('mission_story_logs')
    op.drop_index(op.f('ix_dao_votes_id'), table_name='dao_votes')
    op.drop_table('dao_votes')
    op.drop_index(op.f('ix_badges_name'), table_name='badges')
    op.drop_index(op.f('ix_badges_id'), table_name='badges')
    op.drop_table('badges')
    op.drop_index(op.f('ix_user_nfts_id'), table_name='user_nfts')
    op.drop_table('user_nfts')
    op.drop_index(op.f('ix_missions_title'), table_name='missions')
    op.drop_index(op.f('ix_missions_id'), table_name='missions')
    op.drop_table('missions')
    op.drop_index(op.f('ix_leaderboard_cache_value'), table_name='leaderboard_cache')
    op.drop_index(op.f('ix_leaderboard_cache_user_id'), table_name='leaderboard_cache')
    op.drop_index(op.f('ix_leaderboard_cache_rank'), table_name='leaderboard_cache')
    op.drop_index(op.f('ix_leaderboard_cache_id'), table_name='leaderboard_cache')
    op.drop_index(op.f('ix_leaderboard_cache_category'), table_name='leaderboard_cache')
    op.drop_table('leaderboard_cache')
    op.drop_index(op.f('ix_dao_proposals_title'), table_name='dao_proposals')
    op.drop_index(op.f('ix_dao_proposals_id'), table_name='dao_proposals')
    op.drop_table('dao_proposals')
    op.drop_index(op.f('ix_daily_bonus_claims_user_id'), table_name='daily_bonus_claims')
    op.drop_index(op.f('ix_daily_bonus_claims_id'), table_name='daily_bonus_claims')
    op.drop_table('daily_bonus_claims')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_telegram_id'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_nfts_name'), table_name='nfts')
    op.drop_index(op.f('ix_nfts_id'), table_name='nfts')
    op.drop_table('nfts')
    # ### end Alembic commands ###
